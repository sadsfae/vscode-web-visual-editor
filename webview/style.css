@layer user-style, reset;

:root {
  --wve-toolbar-width: 40px;
  --wve-zoom: 1;
}

/* Styles that overrides user-style */
*,
*::before,
*::after {
  user-select: none;
  outline: none;
  cursor: default;
  pointer-events: auto;
}

html {
  overflow: auto;
  margin: 0;
}

body {
  overflow: auto;
  position: static;
  zoom: var(--wve-zoom);
  margin: 0 0 0 calc(var(--wve-toolbar-width) / var(--wve-zoom));
  transform: none;
}

body :hover:not(:has(:hover), [wve-selected]) {
  box-shadow: inset 0 0 0 max(100vh, 100vw) color-mix(in srgb, var(--vscode-focusBorder), transparent 80%);
}

[wve-selected] {

  & {
    box-shadow: 0 0 0 2px var(--vscode-focusBorder);
  }

  &[wve-movable] {
    cursor: grab;
    box-shadow: 0 0 0 2px var(--vscode-editorWarning-foreground);

    &:active {
      cursor: grabbing;
    }
  }

  * {
    pointer-events: none;
  }
}

/* Styles for this extension's elements */
@font-face {
  font-family: 'WVE Icons';
  font-style: normal;
  font-weight: 400;
  src: url(./MaterialSymbolsRounded.woff2) format('woff2');
}

@layer reset {
  [id^=wve-] {

    &,
    *,
    *::before,
    *::after {
      all: unset;
      box-sizing: border-box;
      font-family: var(--vscode-font-family);
      font-size: 10px;
    }
  }
}

#wve-toolbar {
  position: fixed;
  left: 0;
  top: 0;
  padding: 0;
  width: var(--wve-toolbar-width);
  height: 100dvh;
  zoom: calc(1 / var(--wve-zoom));
  color: var(--vscode-descriptionForeground);
  background-color: var(--vscode-editor-background);
  box-shadow: 0 0 1px 1px currentColor;
  /* for icons (inherited to descendant) */
  direction: ltr;
  font-feature-settings: 'liga';
  line-height: 1;
  font-size: 24px;
  white-space: nowrap;
  word-wrap: normal;
  -webkit-font-smoothing: antialiased;

  .wve-button {
    display: grid;
    place-content: center;
    width: var(--wve-toolbar-width);
    height: var(--wve-toolbar-width);
    opacity: 0.8;
    font-size: 24px;
    font-family: 'WVE Icons';
    color: var(--vscode-foreground);

    &:disabled,
    :disabled & {
      cursor: not-allowed;
      color: var(--vscode-disabledForeground);
    }

    &:not(:disabled, :disabled *) {
      &:hover {
        opacity: 1;
        box-shadow: inset 0 0 0 var(--wve-toolbar-width) var(--vscode-button-secondaryHoverBackground);
      }

      &:active {
        color: var(--vscode-button-hoverBackground);
        background-color: var(--vscode-editor-selectionHighlightBackground);
      }
    }

    [type=checkbox] {
      position: relative;
      all: 0;
      padding: 0;
      margin: 0;
      appearance: none;
      color: transparent;
      background-color: transparent;
    }

    &:has(:checked) {
      color: var(--vscode-button-hoverBackground);
      background-color: var(--vscode-editor-selectionHighlightBackground);
    }
  }

  &,
  >fieldset {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  >fieldset {
    &:not(:first-child) {
      border-top: 1px solid rgb(128 128 128 / 0.2);
    }
  }
}

#wve-selector {
  all: unset;
  box-sizing: border-box;
  position: absolute;
  margin: 0;
  padding: 0;
  width: 0;
  height: 0;
  background-color: rgb(128 128 128 / 0.15);
  /* NOTE Do not use border so that JavaScript can recognize mouse drag area. */
  box-shadow: 0 0 0 1px var(--vscode-editorWarning-foreground);
}